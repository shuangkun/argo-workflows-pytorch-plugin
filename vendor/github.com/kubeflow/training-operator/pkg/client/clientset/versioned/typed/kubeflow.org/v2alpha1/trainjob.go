// Copyright 2024 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package v2alpha1

import (
	"context"

	v2alpha1 "github.com/kubeflow/training-operator/pkg/apis/kubeflow.org/v2alpha1"
	kubefloworgv2alpha1 "github.com/kubeflow/training-operator/pkg/client/applyconfiguration/kubeflow.org/v2alpha1"
	scheme "github.com/kubeflow/training-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// TrainJobsGetter has a method to return a TrainJobInterface.
// A group's client should implement this interface.
type TrainJobsGetter interface {
	TrainJobs(namespace string) TrainJobInterface
}

// TrainJobInterface has methods to work with TrainJob resources.
type TrainJobInterface interface {
	Create(ctx context.Context, trainJob *v2alpha1.TrainJob, opts v1.CreateOptions) (*v2alpha1.TrainJob, error)
	Update(ctx context.Context, trainJob *v2alpha1.TrainJob, opts v1.UpdateOptions) (*v2alpha1.TrainJob, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, trainJob *v2alpha1.TrainJob, opts v1.UpdateOptions) (*v2alpha1.TrainJob, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v2alpha1.TrainJob, error)
	List(ctx context.Context, opts v1.ListOptions) (*v2alpha1.TrainJobList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v2alpha1.TrainJob, err error)
	Apply(ctx context.Context, trainJob *kubefloworgv2alpha1.TrainJobApplyConfiguration, opts v1.ApplyOptions) (result *v2alpha1.TrainJob, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, trainJob *kubefloworgv2alpha1.TrainJobApplyConfiguration, opts v1.ApplyOptions) (result *v2alpha1.TrainJob, err error)
	TrainJobExpansion
}

// trainJobs implements TrainJobInterface
type trainJobs struct {
	*gentype.ClientWithListAndApply[*v2alpha1.TrainJob, *v2alpha1.TrainJobList, *kubefloworgv2alpha1.TrainJobApplyConfiguration]
}

// newTrainJobs returns a TrainJobs
func newTrainJobs(c *KubeflowV2alpha1Client, namespace string) *trainJobs {
	return &trainJobs{
		gentype.NewClientWithListAndApply[*v2alpha1.TrainJob, *v2alpha1.TrainJobList, *kubefloworgv2alpha1.TrainJobApplyConfiguration](
			"trainjobs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v2alpha1.TrainJob { return &v2alpha1.TrainJob{} },
			func() *v2alpha1.TrainJobList { return &v2alpha1.TrainJobList{} }),
	}
}
